apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "searchruler.fullname" . }}
  labels:
    {{- include "searchruler.labels" . | nindent 4 }}
spec:
  {{- if not .Values.controller.autoscaling.enabled }}
  replicas: {{ .Values.controller.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "searchruler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.controller.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "searchruler.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.controller.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "searchruler.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.controller.podSecurityContext | nindent 8 }}
      containers:

        - args:
          {{- if and (.Values.controller.metrics.enabled) }}
          - --metrics-bind-address=127.0.0.1:8080
          {{- end }}
          - --health-probe-bind-address=:8081
          - --webhook-client-port=10250
          - --webhook-server-port=10250
          - --webhook-client-hostname={{ include "searchruler.fullname" . }}-webhooks.{{- .Release.Namespace -}}.svc
          {{- with .Values.controller.extraArgs }}
          {{ tpl (toYaml .) $ | nindent 10 }}
          {{- end }}

          ports:
            - containerPort: 10250
              name: webhooks
              protocol: TCP

          {{- if .Values.controller.metrics.enabled }}
            - containerPort: 8080
              name: metrics
              protocol: TCP
          {{- end }}

          {{- with .Values.controller.env }}
          env:
          {{ toYaml . | nindent 10 }}
          {{- end }}

          {{- with .Values.controller.envFrom }}
          envFrom:
          {{ toYaml . | nindent 10 }}
          {{- end }}

          command:
            - /manager
          image: "{{ .Values.controller.image.repository }}:{{ .Values.controller.image.tag | default (printf "v%s" .Chart.AppVersion) }}"
          imagePullPolicy: {{ .Values.controller.image.pullPolicy }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 15
            periodSeconds: 20
          name: manager
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.controller.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.controller.securityContext | nindent 12 }}

          volumeMounts:
            {{- with .Values.controller.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}

      {{- with .Values.controller.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.controller.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        {{- with .Values.controller.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}

